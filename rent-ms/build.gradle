plugins {
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "org.springframework.boot" version "2.1.9.RELEASE"
	id 'java'
	id 'org.asciidoctor.convert' version "1.5.9.2"
	id "org.sonarqube" version "3.0"
}

dependencies {
	implementation project(':rent-ms-application')
	implementation project(':rent-ms-persistence')
	implementation project(':rent-ms-web')
	implementation project(':rent-ms-configuration')
}

ext {
	snippetsDir = file('build/generated-snippets')
}


asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
jar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}


allprojects {

	group = 'com.technocorp.ericpinto.rentms'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'

	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/milestone' }
	}

	ext {
		set('springCloudVersion', "2020.0.0-M5")
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-mongodb';
		implementation 'io.springfox:springfox-swagger2:2.9.2'
		implementation 'io.springfox:springfox-swagger-ui:2.9.2'
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
		testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		implementation 'org.springframework.boot:spring-boot-starter'
		compileOnly 'org.projectlombok:lombok:1.18.16'
		annotationProcessor 'org.projectlombok:lombok'

	}

	test{
		useJUnitPlatform()
		testLogging{
			events "passed", "skipped", "failed"
		}
	}


	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:2.4.0")
			mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
		}
	}
}



